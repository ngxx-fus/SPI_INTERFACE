$date
	Fri Apr 19 16:19:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TEST_MODULE $end
$var wire 1 ! CS $end
$var wire 1 " HIGH $end
$var wire 1 # LOW $end
$var wire 1 $ S_CLK $end
$var wire 8 % SLAVE_STATUS [7:0] $end
$var wire 8 & SLAVE_I_DATA [7:0] $end
$var wire 1 ' SLAVE_CLK $end
$var wire 1 ( OUT $end
$var wire 8 ) MASTER_STATUS [7:0] $end
$var wire 8 * MASTER_I_DATA [7:0] $end
$var wire 1 + MASTER_CLK $end
$var wire 1 , IN $end
$var reg 1 - MASTER_CLR $end
$var reg 8 . MASTER_CONTROL [7:0] $end
$var reg 8 / MASTER_O_DATA [7:0] $end
$var reg 1 0 MASTER_READ $end
$var reg 1 1 MASTER_WRITE $end
$var reg 1 2 SLAVE_CLR $end
$var reg 8 3 SLAVE_CONTROL [7:0] $end
$var reg 8 4 SLAVE_O_DATA [7:0] $end
$var reg 1 5 SLAVE_READ $end
$var reg 1 6 SLAVE_WRITE $end
$scope module MASTER $end
$var wire 1 - CLR $end
$var wire 8 7 CONTROL [7:0] $end
$var wire 1 ! CS $end
$var wire 1 8 HIGH $end
$var wire 8 9 INCOMING_DATA [7:0] $end
$var wire 1 : LOW $end
$var wire 1 " MS_MODE $end
$var wire 1 0 READ $end
$var wire 8 ; SENDER_BUFFER_DATA_I [7:0] $end
$var wire 1 $ S_CLK $end
$var wire 1 1 WRITE $end
$var wire 1 < TE $end
$var wire 8 = STATUS [7:0] $end
$var wire 1 > SENDER_WRITE $end
$var wire 1 ? SENDER_FULL_STATE $end
$var wire 1 @ SENDER_EMPTY_STATE $end
$var wire 1 A SENDER_CLR $end
$var wire 1 B SENDER_CLK $end
$var wire 1 C SENDER_BUFFER_SH_LD $end
$var wire 1 D SENDER_BUFFER_FULL_STATE $end
$var wire 8 E SENDER_BUFFER_DATA_O [7:0] $end
$var wire 1 F RECEIVER_READ $end
$var wire 1 G RECEIVER_FULL_STATE $end
$var wire 1 H RECEIVER_EMPTY_STATE $end
$var wire 1 I RECEIVER_CLR $end
$var wire 1 J RECEIVER_CLK $end
$var wire 1 K RECEIVER_BUFFER_SH_LD $end
$var wire 1 L RECEIVER_BUFFER_FULL_STATE $end
$var wire 8 M RECEIVER_BUFFER_DATA_O [7:0] $end
$var wire 8 N RECEIVER_BUFFER_DATA_I [7:0] $end
$var wire 1 O RE $end
$var wire 8 P OUTCOMING_DATA [7:0] $end
$var wire 1 ( OUT $end
$var wire 1 Q LOCAL_OUT $end
$var wire 1 R LOCAL_CLK $end
$var wire 1 , IN $end
$var wire 1 S CS_CONTROL $end
$var wire 1 T CONNECTION_FAILED_STATE $end
$var wire 1 + CLK $end
$scope module RECEIVER_BUFFER $end
$var wire 1 : CLK $end
$var wire 1 - CLR $end
$var wire 1 U S_DATA_IN $end
$var wire 1 K SH_LD $end
$var wire 8 V P_DATA_OUT [7:0] $end
$var wire 8 W P_DATA_IN [7:0] $end
$scope module shift_register_0 $end
$var wire 1 : CLK $end
$var wire 1 - CLR $end
$var wire 4 X D_DATA [3:0] $end
$var wire 4 Y P_DATA_IN [3:0] $end
$var wire 1 U S_DATA_IN $end
$var wire 1 Z notCLR $end
$var wire 1 [ notSH_LD $end
$var wire 4 \ S_PRE [3:0] $end
$var wire 4 ] S_CLR [3:0] $end
$var wire 1 K SH_LD $end
$var wire 4 ^ P_DATA_OUT [3:0] $end
$var wire 4 _ D_PRE [3:0] $end
$var wire 4 ` D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 : CLK $end
$var wire 1 a CLR $end
$var wire 1 U DATA $end
$var wire 1 b PRE $end
$var reg 1 c Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 : CLK $end
$var wire 1 d CLR $end
$var wire 1 e DATA $end
$var wire 1 f PRE $end
$var reg 1 g Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 : CLK $end
$var wire 1 h CLR $end
$var wire 1 i DATA $end
$var wire 1 j PRE $end
$var reg 1 k Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 : CLK $end
$var wire 1 l CLR $end
$var wire 1 m DATA $end
$var wire 1 n PRE $end
$var reg 1 o Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 : CLK $end
$var wire 1 - CLR $end
$var wire 4 p D_DATA [3:0] $end
$var wire 4 q P_DATA_IN [3:0] $end
$var wire 1 r S_DATA_IN $end
$var wire 1 s notCLR $end
$var wire 1 t notSH_LD $end
$var wire 4 u S_PRE [3:0] $end
$var wire 4 v S_CLR [3:0] $end
$var wire 1 K SH_LD $end
$var wire 4 w P_DATA_OUT [3:0] $end
$var wire 4 x D_PRE [3:0] $end
$var wire 4 y D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 : CLK $end
$var wire 1 z CLR $end
$var wire 1 r DATA $end
$var wire 1 { PRE $end
$var reg 1 | Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 : CLK $end
$var wire 1 } CLR $end
$var wire 1 ~ DATA $end
$var wire 1 !" PRE $end
$var reg 1 "" Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 : CLK $end
$var wire 1 #" CLR $end
$var wire 1 $" DATA $end
$var wire 1 %" PRE $end
$var reg 1 &" Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 : CLK $end
$var wire 1 '" CLR $end
$var wire 1 (" DATA $end
$var wire 1 )" PRE $end
$var reg 1 *" Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module SENDER_BUFFER $end
$var wire 1 : CLK $end
$var wire 1 - CLR $end
$var wire 8 +" P_DATA_IN [7:0] $end
$var wire 1 ," S_DATA_IN $end
$var wire 1 C SH_LD $end
$var wire 8 -" P_DATA_OUT [7:0] $end
$scope module shift_register_0 $end
$var wire 1 : CLK $end
$var wire 1 - CLR $end
$var wire 4 ." D_DATA [3:0] $end
$var wire 4 /" P_DATA_IN [3:0] $end
$var wire 1 ," S_DATA_IN $end
$var wire 1 0" notCLR $end
$var wire 1 1" notSH_LD $end
$var wire 4 2" S_PRE [3:0] $end
$var wire 4 3" S_CLR [3:0] $end
$var wire 1 C SH_LD $end
$var wire 4 4" P_DATA_OUT [3:0] $end
$var wire 4 5" D_PRE [3:0] $end
$var wire 4 6" D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 : CLK $end
$var wire 1 7" CLR $end
$var wire 1 ," DATA $end
$var wire 1 8" PRE $end
$var reg 1 9" Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 : CLK $end
$var wire 1 :" CLR $end
$var wire 1 ;" DATA $end
$var wire 1 <" PRE $end
$var reg 1 =" Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 : CLK $end
$var wire 1 >" CLR $end
$var wire 1 ?" DATA $end
$var wire 1 @" PRE $end
$var reg 1 A" Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 : CLK $end
$var wire 1 B" CLR $end
$var wire 1 C" DATA $end
$var wire 1 D" PRE $end
$var reg 1 E" Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 : CLK $end
$var wire 1 - CLR $end
$var wire 4 F" D_DATA [3:0] $end
$var wire 4 G" P_DATA_IN [3:0] $end
$var wire 1 H" S_DATA_IN $end
$var wire 1 I" notCLR $end
$var wire 1 J" notSH_LD $end
$var wire 4 K" S_PRE [3:0] $end
$var wire 4 L" S_CLR [3:0] $end
$var wire 1 C SH_LD $end
$var wire 4 M" P_DATA_OUT [3:0] $end
$var wire 4 N" D_PRE [3:0] $end
$var wire 4 O" D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 : CLK $end
$var wire 1 P" CLR $end
$var wire 1 H" DATA $end
$var wire 1 Q" PRE $end
$var reg 1 R" Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 : CLK $end
$var wire 1 S" CLR $end
$var wire 1 T" DATA $end
$var wire 1 U" PRE $end
$var reg 1 V" Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 : CLK $end
$var wire 1 W" CLR $end
$var wire 1 X" DATA $end
$var wire 1 Y" PRE $end
$var reg 1 Z" Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 : CLK $end
$var wire 1 [" CLR $end
$var wire 1 \" DATA $end
$var wire 1 ]" PRE $end
$var reg 1 ^" Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module control $end
$var wire 1 R CLK $end
$var wire 1 - CLR $end
$var wire 8 _" CONTROL [7:0] $end
$var wire 1 `" HIGH $end
$var wire 8 a" LOCAL_CONTROL [7:0] $end
$var wire 1 b" LOW $end
$var wire 1 " MS_MODE $end
$var wire 1 0 READ $end
$var wire 1 J RECEIVER_CLK $end
$var wire 1 I RECEIVER_CLR $end
$var wire 1 C SENDER_BUFFER_SH_LD $end
$var wire 1 B SENDER_CLK $end
$var wire 1 A SENDER_CLR $end
$var wire 8 c" STATUS [7:0] $end
$var wire 1 1 WRITE $end
$var wire 1 ? SENDER_FULL_STATE $end
$var wire 1 @ SENDER_EMPTY_STATE $end
$var wire 1 G RECEIVER_FULL_STATE $end
$var wire 1 H RECEIVER_EMPTY_STATE $end
$var wire 1 S CS $end
$var reg 1 O RE $end
$var reg 1 L RECEIVER_BUFFER_FULL_STATE $end
$var reg 1 K RECEIVER_BUFFER_SH_LD $end
$var reg 1 F RECEIVER_READ $end
$var reg 1 D SENDER_BUFFER_FULL_STATE $end
$var reg 1 d" SENDER_CLR_FROM_BUFFER $end
$var reg 1 > SENDER_WRITE $end
$var reg 1 < TE $end
$upscope $end
$scope module receiver $end
$var wire 1 J CLK $end
$var wire 1 I CLR $end
$var wire 1 e" HIGH $end
$var wire 1 f" LOW $end
$var wire 1 O RE $end
$var wire 1 F READ $end
$var wire 8 g" P_DATA_OUT [7:0] $end
$var wire 1 , IN $end
$var wire 1 G FULL_STATE $end
$var wire 1 H EMPTY_STATE $end
$var wire 8 h" DATA [7:0] $end
$var reg 4 i" COUNT_RECEIVED [3:0] $end
$var reg 1 j" SHIFT_CLK $end
$scope module receiver_shift_register $end
$var wire 1 j" CLK $end
$var wire 1 I CLR $end
$var wire 8 k" P_DATA_IN [7:0] $end
$var wire 1 e" SH_LD $end
$var wire 1 , S_DATA_IN $end
$var wire 8 l" P_DATA_OUT [7:0] $end
$scope module shift_register_0 $end
$var wire 1 j" CLK $end
$var wire 1 I CLR $end
$var wire 4 m" D_DATA [3:0] $end
$var wire 4 n" P_DATA_IN [3:0] $end
$var wire 1 e" SH_LD $end
$var wire 1 o" notCLR $end
$var wire 1 p" notSH_LD $end
$var wire 4 q" S_PRE [3:0] $end
$var wire 1 , S_DATA_IN $end
$var wire 4 r" S_CLR [3:0] $end
$var wire 4 s" P_DATA_OUT [3:0] $end
$var wire 4 t" D_PRE [3:0] $end
$var wire 4 u" D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 j" CLK $end
$var wire 1 v" CLR $end
$var wire 1 w" PRE $end
$var wire 1 , DATA $end
$var reg 1 x" Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 j" CLK $end
$var wire 1 y" CLR $end
$var wire 1 z" DATA $end
$var wire 1 {" PRE $end
$var reg 1 |" Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 j" CLK $end
$var wire 1 }" CLR $end
$var wire 1 ~" DATA $end
$var wire 1 !# PRE $end
$var reg 1 "# Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 j" CLK $end
$var wire 1 ## CLR $end
$var wire 1 $# DATA $end
$var wire 1 %# PRE $end
$var reg 1 &# Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 j" CLK $end
$var wire 1 I CLR $end
$var wire 4 '# D_DATA [3:0] $end
$var wire 4 (# P_DATA_IN [3:0] $end
$var wire 1 e" SH_LD $end
$var wire 1 )# S_DATA_IN $end
$var wire 1 *# notCLR $end
$var wire 1 +# notSH_LD $end
$var wire 4 ,# S_PRE [3:0] $end
$var wire 4 -# S_CLR [3:0] $end
$var wire 4 .# P_DATA_OUT [3:0] $end
$var wire 4 /# D_PRE [3:0] $end
$var wire 4 0# D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 j" CLK $end
$var wire 1 1# CLR $end
$var wire 1 )# DATA $end
$var wire 1 2# PRE $end
$var reg 1 3# Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 j" CLK $end
$var wire 1 4# CLR $end
$var wire 1 5# DATA $end
$var wire 1 6# PRE $end
$var reg 1 7# Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 j" CLK $end
$var wire 1 8# CLR $end
$var wire 1 9# DATA $end
$var wire 1 :# PRE $end
$var reg 1 ;# Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 j" CLK $end
$var wire 1 <# CLR $end
$var wire 1 =# DATA $end
$var wire 1 ># PRE $end
$var reg 1 ?# Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sender $end
$var wire 1 B CLK $end
$var wire 1 A CLR $end
$var wire 8 @# DATA [7:0] $end
$var wire 1 A# HIGH $end
$var wire 1 B# LOW $end
$var wire 1 < TE $end
$var wire 1 > WRITE $end
$var wire 8 C# P_DATA_OUT [7:0] $end
$var wire 1 Q OUT $end
$var wire 1 ? FULL_STATE $end
$var wire 1 @ EMPTY_STATE $end
$var reg 4 D# COUNT_SENT [3:0] $end
$var reg 1 E# SHIFT_CLK $end
$scope module sender_shift_register $end
$var wire 1 E# CLK $end
$var wire 1 A CLR $end
$var wire 8 F# P_DATA_IN [7:0] $end
$var wire 1 G# SH_LD $end
$var wire 1 B# S_DATA_IN $end
$var wire 8 H# P_DATA_OUT [7:0] $end
$scope module shift_register_0 $end
$var wire 1 E# CLK $end
$var wire 1 A CLR $end
$var wire 4 I# D_DATA [3:0] $end
$var wire 4 J# P_DATA_IN [3:0] $end
$var wire 1 G# SH_LD $end
$var wire 1 B# S_DATA_IN $end
$var wire 1 K# notCLR $end
$var wire 1 L# notSH_LD $end
$var wire 4 M# S_PRE [3:0] $end
$var wire 4 N# S_CLR [3:0] $end
$var wire 4 O# P_DATA_OUT [3:0] $end
$var wire 4 P# D_PRE [3:0] $end
$var wire 4 Q# D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 E# CLK $end
$var wire 1 R# CLR $end
$var wire 1 B# DATA $end
$var wire 1 S# PRE $end
$var reg 1 T# Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 E# CLK $end
$var wire 1 U# CLR $end
$var wire 1 V# DATA $end
$var wire 1 W# PRE $end
$var reg 1 X# Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 E# CLK $end
$var wire 1 Y# CLR $end
$var wire 1 Z# DATA $end
$var wire 1 [# PRE $end
$var reg 1 \# Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 E# CLK $end
$var wire 1 ]# CLR $end
$var wire 1 ^# DATA $end
$var wire 1 _# PRE $end
$var reg 1 `# Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 E# CLK $end
$var wire 1 A CLR $end
$var wire 4 a# D_DATA [3:0] $end
$var wire 4 b# P_DATA_IN [3:0] $end
$var wire 1 G# SH_LD $end
$var wire 1 c# S_DATA_IN $end
$var wire 1 d# notCLR $end
$var wire 1 e# notSH_LD $end
$var wire 4 f# S_PRE [3:0] $end
$var wire 4 g# S_CLR [3:0] $end
$var wire 4 h# P_DATA_OUT [3:0] $end
$var wire 4 i# D_PRE [3:0] $end
$var wire 4 j# D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 E# CLK $end
$var wire 1 k# CLR $end
$var wire 1 c# DATA $end
$var wire 1 l# PRE $end
$var reg 1 m# Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 E# CLK $end
$var wire 1 n# CLR $end
$var wire 1 o# DATA $end
$var wire 1 p# PRE $end
$var reg 1 q# Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 E# CLK $end
$var wire 1 r# CLR $end
$var wire 1 s# DATA $end
$var wire 1 t# PRE $end
$var reg 1 u# Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 E# CLK $end
$var wire 1 v# CLR $end
$var wire 1 w# DATA $end
$var wire 1 x# PRE $end
$var reg 1 y# Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module status $end
$var wire 1 - CLR $end
$var wire 1 T CONNECTION_FAILED_STATE $end
$var wire 1 z# HIGH $end
$var wire 1 {# HIGH_IMDEDANCE $end
$var wire 1 |# LOW $end
$var wire 1 L RECEIVER_BUFFER_FULL_STATE $end
$var wire 1 K RECEIVER_BUFFER_SH_LD $end
$var wire 1 H RECEIVER_EMPTY_STATE $end
$var wire 1 G RECEIVER_FULL_STATE $end
$var wire 1 }# RECEIVER_READ $end
$var wire 1 D SENDER_BUFFER_FULL_STATE $end
$var wire 1 C SENDER_BUFFER_SH_LD $end
$var wire 1 @ SENDER_EMPTY_STATE $end
$var wire 1 ? SENDER_FULL_STATE $end
$var wire 1 > SENDER_WRITE $end
$var wire 8 ~# STATUS [7:0] $end
$var wire 1 $ S_CLK $end
$var reg 8 !$ LOCAL_STATUS [7:0] $end
$upscope $end
$upscope $end
$scope module MASTER_clk_gen $end
$var wire 32 "$ FACTOR [31:0] $end
$var reg 1 + CLK $end
$var reg 33 #$ temp [32:0] $end
$upscope $end
$scope module SLAVE $end
$var wire 1 2 CLR $end
$var wire 8 $$ CONTROL [7:0] $end
$var wire 1 ! CS $end
$var wire 1 %$ HIGH $end
$var wire 1 ( IN $end
$var wire 8 &$ INCOMING_DATA [7:0] $end
$var wire 1 '$ LOW $end
$var wire 1 # MS_MODE $end
$var wire 1 5 READ $end
$var wire 8 ($ SENDER_BUFFER_DATA_I [7:0] $end
$var wire 1 $ S_CLK $end
$var wire 1 6 WRITE $end
$var wire 1 )$ TE $end
$var wire 8 *$ STATUS [7:0] $end
$var wire 1 +$ SENDER_WRITE $end
$var wire 1 ,$ SENDER_FULL_STATE $end
$var wire 1 -$ SENDER_EMPTY_STATE $end
$var wire 1 .$ SENDER_CLR $end
$var wire 1 /$ SENDER_CLK $end
$var wire 1 0$ SENDER_BUFFER_SH_LD $end
$var wire 1 1$ SENDER_BUFFER_FULL_STATE $end
$var wire 8 2$ SENDER_BUFFER_DATA_O [7:0] $end
$var wire 1 3$ RECEIVER_READ $end
$var wire 1 4$ RECEIVER_FULL_STATE $end
$var wire 1 5$ RECEIVER_EMPTY_STATE $end
$var wire 1 6$ RECEIVER_CLR $end
$var wire 1 7$ RECEIVER_CLK $end
$var wire 1 8$ RECEIVER_BUFFER_SH_LD $end
$var wire 1 9$ RECEIVER_BUFFER_FULL_STATE $end
$var wire 8 :$ RECEIVER_BUFFER_DATA_O [7:0] $end
$var wire 8 ;$ RECEIVER_BUFFER_DATA_I [7:0] $end
$var wire 1 <$ RE $end
$var wire 8 =$ OUTCOMING_DATA [7:0] $end
$var wire 1 , OUT $end
$var wire 1 >$ LOCAL_OUT $end
$var wire 1 ?$ LOCAL_CLK $end
$var wire 1 @$ CS_CONTROL $end
$var wire 1 A$ CONNECTION_FAILED_STATE $end
$var wire 1 ' CLK $end
$scope module RECEIVER_BUFFER $end
$var wire 1 '$ CLK $end
$var wire 1 2 CLR $end
$var wire 1 B$ S_DATA_IN $end
$var wire 1 8$ SH_LD $end
$var wire 8 C$ P_DATA_OUT [7:0] $end
$var wire 8 D$ P_DATA_IN [7:0] $end
$scope module shift_register_0 $end
$var wire 1 '$ CLK $end
$var wire 1 2 CLR $end
$var wire 4 E$ D_DATA [3:0] $end
$var wire 4 F$ P_DATA_IN [3:0] $end
$var wire 1 B$ S_DATA_IN $end
$var wire 1 G$ notCLR $end
$var wire 1 H$ notSH_LD $end
$var wire 4 I$ S_PRE [3:0] $end
$var wire 4 J$ S_CLR [3:0] $end
$var wire 1 8$ SH_LD $end
$var wire 4 K$ P_DATA_OUT [3:0] $end
$var wire 4 L$ D_PRE [3:0] $end
$var wire 4 M$ D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 '$ CLK $end
$var wire 1 N$ CLR $end
$var wire 1 B$ DATA $end
$var wire 1 O$ PRE $end
$var reg 1 P$ Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 '$ CLK $end
$var wire 1 Q$ CLR $end
$var wire 1 R$ DATA $end
$var wire 1 S$ PRE $end
$var reg 1 T$ Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 '$ CLK $end
$var wire 1 U$ CLR $end
$var wire 1 V$ DATA $end
$var wire 1 W$ PRE $end
$var reg 1 X$ Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 '$ CLK $end
$var wire 1 Y$ CLR $end
$var wire 1 Z$ DATA $end
$var wire 1 [$ PRE $end
$var reg 1 \$ Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 '$ CLK $end
$var wire 1 2 CLR $end
$var wire 4 ]$ D_DATA [3:0] $end
$var wire 4 ^$ P_DATA_IN [3:0] $end
$var wire 1 _$ S_DATA_IN $end
$var wire 1 `$ notCLR $end
$var wire 1 a$ notSH_LD $end
$var wire 4 b$ S_PRE [3:0] $end
$var wire 4 c$ S_CLR [3:0] $end
$var wire 1 8$ SH_LD $end
$var wire 4 d$ P_DATA_OUT [3:0] $end
$var wire 4 e$ D_PRE [3:0] $end
$var wire 4 f$ D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 '$ CLK $end
$var wire 1 g$ CLR $end
$var wire 1 _$ DATA $end
$var wire 1 h$ PRE $end
$var reg 1 i$ Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 '$ CLK $end
$var wire 1 j$ CLR $end
$var wire 1 k$ DATA $end
$var wire 1 l$ PRE $end
$var reg 1 m$ Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 '$ CLK $end
$var wire 1 n$ CLR $end
$var wire 1 o$ DATA $end
$var wire 1 p$ PRE $end
$var reg 1 q$ Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 '$ CLK $end
$var wire 1 r$ CLR $end
$var wire 1 s$ DATA $end
$var wire 1 t$ PRE $end
$var reg 1 u$ Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module SENDER_BUFFER $end
$var wire 1 '$ CLK $end
$var wire 1 2 CLR $end
$var wire 8 v$ P_DATA_IN [7:0] $end
$var wire 1 w$ S_DATA_IN $end
$var wire 1 0$ SH_LD $end
$var wire 8 x$ P_DATA_OUT [7:0] $end
$scope module shift_register_0 $end
$var wire 1 '$ CLK $end
$var wire 1 2 CLR $end
$var wire 4 y$ D_DATA [3:0] $end
$var wire 4 z$ P_DATA_IN [3:0] $end
$var wire 1 w$ S_DATA_IN $end
$var wire 1 {$ notCLR $end
$var wire 1 |$ notSH_LD $end
$var wire 4 }$ S_PRE [3:0] $end
$var wire 4 ~$ S_CLR [3:0] $end
$var wire 1 0$ SH_LD $end
$var wire 4 !% P_DATA_OUT [3:0] $end
$var wire 4 "% D_PRE [3:0] $end
$var wire 4 #% D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 '$ CLK $end
$var wire 1 $% CLR $end
$var wire 1 w$ DATA $end
$var wire 1 %% PRE $end
$var reg 1 &% Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 '$ CLK $end
$var wire 1 '% CLR $end
$var wire 1 (% DATA $end
$var wire 1 )% PRE $end
$var reg 1 *% Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 '$ CLK $end
$var wire 1 +% CLR $end
$var wire 1 ,% DATA $end
$var wire 1 -% PRE $end
$var reg 1 .% Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 '$ CLK $end
$var wire 1 /% CLR $end
$var wire 1 0% DATA $end
$var wire 1 1% PRE $end
$var reg 1 2% Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 '$ CLK $end
$var wire 1 2 CLR $end
$var wire 4 3% D_DATA [3:0] $end
$var wire 4 4% P_DATA_IN [3:0] $end
$var wire 1 5% S_DATA_IN $end
$var wire 1 6% notCLR $end
$var wire 1 7% notSH_LD $end
$var wire 4 8% S_PRE [3:0] $end
$var wire 4 9% S_CLR [3:0] $end
$var wire 1 0$ SH_LD $end
$var wire 4 :% P_DATA_OUT [3:0] $end
$var wire 4 ;% D_PRE [3:0] $end
$var wire 4 <% D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 '$ CLK $end
$var wire 1 =% CLR $end
$var wire 1 5% DATA $end
$var wire 1 >% PRE $end
$var reg 1 ?% Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 '$ CLK $end
$var wire 1 @% CLR $end
$var wire 1 A% DATA $end
$var wire 1 B% PRE $end
$var reg 1 C% Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 '$ CLK $end
$var wire 1 D% CLR $end
$var wire 1 E% DATA $end
$var wire 1 F% PRE $end
$var reg 1 G% Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 '$ CLK $end
$var wire 1 H% CLR $end
$var wire 1 I% DATA $end
$var wire 1 J% PRE $end
$var reg 1 K% Q $end
$upscope $end
$upscope $end
$upscope $end
$scope module control $end
$var wire 1 ?$ CLK $end
$var wire 1 2 CLR $end
$var wire 8 L% CONTROL [7:0] $end
$var wire 1 M% HIGH $end
$var wire 8 N% LOCAL_CONTROL [7:0] $end
$var wire 1 O% LOW $end
$var wire 1 # MS_MODE $end
$var wire 1 5 READ $end
$var wire 1 7$ RECEIVER_CLK $end
$var wire 1 6$ RECEIVER_CLR $end
$var wire 1 0$ SENDER_BUFFER_SH_LD $end
$var wire 1 /$ SENDER_CLK $end
$var wire 1 .$ SENDER_CLR $end
$var wire 8 P% STATUS [7:0] $end
$var wire 1 6 WRITE $end
$var wire 1 ,$ SENDER_FULL_STATE $end
$var wire 1 -$ SENDER_EMPTY_STATE $end
$var wire 1 4$ RECEIVER_FULL_STATE $end
$var wire 1 5$ RECEIVER_EMPTY_STATE $end
$var wire 1 @$ CS $end
$var reg 1 <$ RE $end
$var reg 1 9$ RECEIVER_BUFFER_FULL_STATE $end
$var reg 1 8$ RECEIVER_BUFFER_SH_LD $end
$var reg 1 3$ RECEIVER_READ $end
$var reg 1 1$ SENDER_BUFFER_FULL_STATE $end
$var reg 1 Q% SENDER_CLR_FROM_BUFFER $end
$var reg 1 +$ SENDER_WRITE $end
$var reg 1 )$ TE $end
$upscope $end
$scope module receiver $end
$var wire 1 7$ CLK $end
$var wire 1 6$ CLR $end
$var wire 1 R% HIGH $end
$var wire 1 ( IN $end
$var wire 1 S% LOW $end
$var wire 1 <$ RE $end
$var wire 1 3$ READ $end
$var wire 8 T% P_DATA_OUT [7:0] $end
$var wire 1 4$ FULL_STATE $end
$var wire 1 5$ EMPTY_STATE $end
$var wire 8 U% DATA [7:0] $end
$var reg 4 V% COUNT_RECEIVED [3:0] $end
$var reg 1 W% SHIFT_CLK $end
$scope module receiver_shift_register $end
$var wire 1 W% CLK $end
$var wire 1 6$ CLR $end
$var wire 8 X% P_DATA_IN [7:0] $end
$var wire 1 R% SH_LD $end
$var wire 1 ( S_DATA_IN $end
$var wire 8 Y% P_DATA_OUT [7:0] $end
$scope module shift_register_0 $end
$var wire 1 W% CLK $end
$var wire 1 6$ CLR $end
$var wire 4 Z% D_DATA [3:0] $end
$var wire 4 [% P_DATA_IN [3:0] $end
$var wire 1 R% SH_LD $end
$var wire 1 ( S_DATA_IN $end
$var wire 1 \% notCLR $end
$var wire 1 ]% notSH_LD $end
$var wire 4 ^% S_PRE [3:0] $end
$var wire 4 _% S_CLR [3:0] $end
$var wire 4 `% P_DATA_OUT [3:0] $end
$var wire 4 a% D_PRE [3:0] $end
$var wire 4 b% D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 W% CLK $end
$var wire 1 c% CLR $end
$var wire 1 ( DATA $end
$var wire 1 d% PRE $end
$var reg 1 e% Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 W% CLK $end
$var wire 1 f% CLR $end
$var wire 1 g% DATA $end
$var wire 1 h% PRE $end
$var reg 1 i% Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 W% CLK $end
$var wire 1 j% CLR $end
$var wire 1 k% DATA $end
$var wire 1 l% PRE $end
$var reg 1 m% Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 W% CLK $end
$var wire 1 n% CLR $end
$var wire 1 o% DATA $end
$var wire 1 p% PRE $end
$var reg 1 q% Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 W% CLK $end
$var wire 1 6$ CLR $end
$var wire 4 r% D_DATA [3:0] $end
$var wire 4 s% P_DATA_IN [3:0] $end
$var wire 1 R% SH_LD $end
$var wire 1 t% S_DATA_IN $end
$var wire 1 u% notCLR $end
$var wire 1 v% notSH_LD $end
$var wire 4 w% S_PRE [3:0] $end
$var wire 4 x% S_CLR [3:0] $end
$var wire 4 y% P_DATA_OUT [3:0] $end
$var wire 4 z% D_PRE [3:0] $end
$var wire 4 {% D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 W% CLK $end
$var wire 1 |% CLR $end
$var wire 1 t% DATA $end
$var wire 1 }% PRE $end
$var reg 1 ~% Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 W% CLK $end
$var wire 1 !& CLR $end
$var wire 1 "& DATA $end
$var wire 1 #& PRE $end
$var reg 1 $& Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 W% CLK $end
$var wire 1 %& CLR $end
$var wire 1 && DATA $end
$var wire 1 '& PRE $end
$var reg 1 (& Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 W% CLK $end
$var wire 1 )& CLR $end
$var wire 1 *& DATA $end
$var wire 1 +& PRE $end
$var reg 1 ,& Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sender $end
$var wire 1 /$ CLK $end
$var wire 1 .$ CLR $end
$var wire 8 -& DATA [7:0] $end
$var wire 1 .& HIGH $end
$var wire 1 /& LOW $end
$var wire 1 )$ TE $end
$var wire 1 +$ WRITE $end
$var wire 8 0& P_DATA_OUT [7:0] $end
$var wire 1 >$ OUT $end
$var wire 1 ,$ FULL_STATE $end
$var wire 1 -$ EMPTY_STATE $end
$var reg 4 1& COUNT_SENT [3:0] $end
$var reg 1 2& SHIFT_CLK $end
$scope module sender_shift_register $end
$var wire 1 2& CLK $end
$var wire 1 .$ CLR $end
$var wire 8 3& P_DATA_IN [7:0] $end
$var wire 1 4& SH_LD $end
$var wire 1 /& S_DATA_IN $end
$var wire 8 5& P_DATA_OUT [7:0] $end
$scope module shift_register_0 $end
$var wire 1 2& CLK $end
$var wire 1 .$ CLR $end
$var wire 4 6& D_DATA [3:0] $end
$var wire 4 7& P_DATA_IN [3:0] $end
$var wire 1 4& SH_LD $end
$var wire 1 /& S_DATA_IN $end
$var wire 1 8& notCLR $end
$var wire 1 9& notSH_LD $end
$var wire 4 :& S_PRE [3:0] $end
$var wire 4 ;& S_CLR [3:0] $end
$var wire 4 <& P_DATA_OUT [3:0] $end
$var wire 4 =& D_PRE [3:0] $end
$var wire 4 >& D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 2& CLK $end
$var wire 1 ?& CLR $end
$var wire 1 /& DATA $end
$var wire 1 @& PRE $end
$var reg 1 A& Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 2& CLK $end
$var wire 1 B& CLR $end
$var wire 1 C& DATA $end
$var wire 1 D& PRE $end
$var reg 1 E& Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 2& CLK $end
$var wire 1 F& CLR $end
$var wire 1 G& DATA $end
$var wire 1 H& PRE $end
$var reg 1 I& Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 2& CLK $end
$var wire 1 J& CLR $end
$var wire 1 K& DATA $end
$var wire 1 L& PRE $end
$var reg 1 M& Q $end
$upscope $end
$upscope $end
$scope module shift_register_1 $end
$var wire 1 2& CLK $end
$var wire 1 .$ CLR $end
$var wire 4 N& D_DATA [3:0] $end
$var wire 4 O& P_DATA_IN [3:0] $end
$var wire 1 4& SH_LD $end
$var wire 1 P& S_DATA_IN $end
$var wire 1 Q& notCLR $end
$var wire 1 R& notSH_LD $end
$var wire 4 S& S_PRE [3:0] $end
$var wire 4 T& S_CLR [3:0] $end
$var wire 4 U& P_DATA_OUT [3:0] $end
$var wire 4 V& D_PRE [3:0] $end
$var wire 4 W& D_CLR [3:0] $end
$scope module dff0 $end
$var wire 1 2& CLK $end
$var wire 1 X& CLR $end
$var wire 1 P& DATA $end
$var wire 1 Y& PRE $end
$var reg 1 Z& Q $end
$upscope $end
$scope module dff1 $end
$var wire 1 2& CLK $end
$var wire 1 [& CLR $end
$var wire 1 \& DATA $end
$var wire 1 ]& PRE $end
$var reg 1 ^& Q $end
$upscope $end
$scope module dff2 $end
$var wire 1 2& CLK $end
$var wire 1 _& CLR $end
$var wire 1 `& DATA $end
$var wire 1 a& PRE $end
$var reg 1 b& Q $end
$upscope $end
$scope module dff3 $end
$var wire 1 2& CLK $end
$var wire 1 c& CLR $end
$var wire 1 d& DATA $end
$var wire 1 e& PRE $end
$var reg 1 f& Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module status $end
$var wire 1 2 CLR $end
$var wire 1 A$ CONNECTION_FAILED_STATE $end
$var wire 1 g& HIGH $end
$var wire 1 h& HIGH_IMDEDANCE $end
$var wire 1 i& LOW $end
$var wire 1 9$ RECEIVER_BUFFER_FULL_STATE $end
$var wire 1 8$ RECEIVER_BUFFER_SH_LD $end
$var wire 1 5$ RECEIVER_EMPTY_STATE $end
$var wire 1 4$ RECEIVER_FULL_STATE $end
$var wire 1 j& RECEIVER_READ $end
$var wire 1 1$ SENDER_BUFFER_FULL_STATE $end
$var wire 1 0$ SENDER_BUFFER_SH_LD $end
$var wire 1 -$ SENDER_EMPTY_STATE $end
$var wire 1 ,$ SENDER_FULL_STATE $end
$var wire 1 +$ SENDER_WRITE $end
$var wire 8 k& STATUS [7:0] $end
$var wire 1 $ S_CLK $end
$var reg 8 l& LOCAL_STATUS [7:0] $end
$upscope $end
$upscope $end
$scope module SLAVE_clk_gen $end
$var wire 32 m& FACTOR [31:0] $end
$var reg 1 ' CLK $end
$var reg 33 n& temp [32:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11001 n&
b11001 m&
b110000 l&
b110000 k&
zj&
0i&
zh&
1g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
b0 W&
b0 V&
b0 U&
b0 T&
b0 S&
0R&
1Q&
0P&
b0 O&
b0 N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
b0 >&
b0 =&
b0 <&
b0 ;&
b0 :&
09&
18&
b0 7&
b0 6&
b0 5&
14&
b0 3&
x2&
b1000 1&
b0 0&
0/&
1.&
b0 -&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
b0 {%
b0 z%
b0 y%
b0 x%
b0 w%
0v%
1u%
0t%
bz s%
bz r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
b0 b%
b0 a%
b0 `%
b0 _%
b0 ^%
0]%
1\%
bz [%
bz Z%
b0 Y%
bz X%
xW%
b0 V%
bz U%
b0 T%
0S%
1R%
0Q%
bz P%
0O%
b0 N%
1M%
b0 L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
b0 <%
b0 ;%
b0 :%
b0 9%
b0 8%
07%
16%
05%
b1101 4%
b1101 3%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
b0 #%
b0 "%
b0 !%
b0 ~$
b0 }$
0|$
1{$
b100 z$
b100 y$
b0 x$
zw$
b1001101 v$
0u$
xt$
0s$
xr$
0q$
xp$
0o$
xn$
0m$
xl$
0k$
xj$
0i$
xh$
xg$
bx f$
bx e$
b0 d$
bx c$
bx b$
1a$
1`$
0_$
bz ^$
bz ]$
0\$
x[$
0Z$
xY$
0X$
xW$
0V$
xU$
0T$
xS$
0R$
xQ$
0P$
xO$
xN$
bx M$
bx L$
b0 K$
bx J$
bx I$
1H$
1G$
bz F$
bz E$
bz D$
b0 C$
zB$
xA$
1@$
z?$
z>$
bz =$
0<$
bz ;$
b0 :$
09$
08$
z7$
06$
15$
04$
03$
b0 2$
01$
10$
z/$
0.$
1-$
0,$
0+$
b110000 *$
0)$
b1001101 ($
0'$
b1001101 &$
1%$
b0 $$
b1001 #$
b1001 "$
b110000 !$
b110000 ~#
z}#
0|#
z{#
1z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
b0 j#
b0 i#
b0 h#
b0 g#
b0 f#
0e#
1d#
0c#
b0 b#
b0 a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
b0 Q#
b0 P#
b0 O#
b0 N#
b0 M#
0L#
1K#
b0 J#
b0 I#
b0 H#
1G#
b0 F#
xE#
b1000 D#
b0 C#
0B#
1A#
b0 @#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
b0 0#
b0 /#
b0 .#
b0 -#
b0 ,#
0+#
1*#
0)#
bz (#
bz '#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
0p"
1o"
bz n"
bz m"
b0 l"
bz k"
xj"
b0 i"
bz h"
b0 g"
0f"
1e"
0d"
bz c"
0b"
b0 a"
1`"
b0 _"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
0J"
1I"
0H"
b0 G"
b0 F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
01"
10"
b101 /"
b101 ."
b0 -"
z,"
b1010000 +"
0*"
x)"
0("
x'"
0&"
x%"
0$"
x#"
0""
x!"
0~
x}
0|
x{
xz
bx y
bx x
b0 w
bx v
bx u
1t
1s
0r
bz q
bz p
0o
xn
0m
xl
0k
xj
0i
xh
0g
xf
0e
xd
0c
xb
xa
bx `
bx _
b0 ^
bx ]
bx \
1[
1Z
bz Y
bz X
bz W
b0 V
zU
xT
1S
0R
zQ
bz P
0O
bz N
b0 M
0L
0K
0J
0I
1H
0G
0F
b0 E
0D
1C
0B
0A
1@
0?
0>
b110000 =
0<
b1010000 ;
0:
b1010000 9
18
b0 7
06
05
b1001101 4
b0 3
02
01
00
b1010000 /
b0 .
0-
z,
0+
bz *
b110000 )
z(
0'
bz &
b110000 %
z$
0#
1"
1!
$end
#500
02&
0W%
0E#
0j"
#5000
b11000 n&
0'
b1000 #$
0+
#10000
b10111 n&
0'
b111 #$
0+
#15000
b10110 n&
0'
b110 #$
0+
#20000
b10101 n&
0'
b101 #$
0+
#25000
b10100 n&
0'
b100 #$
0+
#30000
b10011 n&
0'
b11 #$
0+
#35000
b10010 n&
0'
b10 #$
0+
#40000
b10001 n&
0'
b1 #$
0+
#45000
b10000 n&
0'
b0 #$
0+
#50000
1A%
1E%
b1101 N&
b1101 O&
1,%
b100 6&
b100 7&
1?"
b101 I#
b101 J#
1H"
1?%
1C%
b1101 :%
1K%
b1001101 2$
b1001101 x$
b1001101 -&
b1001101 3&
b100 !%
1*%
1="
b1010000 E
b1010000 -"
b1010000 @#
b1010000 F#
b101 4"
1E"
1>%
1B%
1J%
1)%
1<"
1D"
1D%
b1011 ;%
1/%
1+%
1$%
b10 "%
1["
1W"
1S"
1P"
1>"
17"
b1010 5"
b100 <%
b1101 #%
b1111 O"
b101 6"
b1011 8%
b10 }$
b1010 2"
b100 9%
17%
b1101 ~$
1|$
b10000 %
b10000 *$
b10000 k&
b10000 l&
b1111 L"
1J"
b101 3"
11"
b10000 )
b10000 =
b10000 ~#
b10000 !$
00$
11$
0C
1D
b1111 n&
0'
16
11
#55000
b1110 n&
0'
#60000
b1101 n&
0'
#65000
b1100 n&
0'
#70000
b1011 n&
0'
#75000
b1010 n&
0'
#80000
b1001 n&
0'
#85000
b1000 n&
0'
#90000
b111 n&
0'
#95000
b110 n&
0'
#100000
0>%
0B%
0J%
0)%
0<"
0D"
0D%
b0 ;%
0/%
0+%
0$%
b0 "%
0["
0W"
0S"
0P"
0>"
07"
b0 5"
b0 <%
b0 #%
b0 O"
b0 6"
b0 8%
b0 }$
b0 2"
b0 9%
07%
b0 ~$
0|$
b0 L"
0J"
b0 3"
01"
10$
1C
b101 n&
0'
06
01
#100050
1G&
1\&
1`&
1Z#
1c#
b100 <&
1E&
1Z&
1^&
b1001101 0&
b1001101 5&
b1101 U&
1f&
1X#
b1010000 C#
b1010000 H#
b101 O#
1`#
1D&
1Y&
1]&
1e&
1W#
1_#
b10 =&
1?&
1F&
1J&
b1011 V&
1_&
b1010 P#
1R#
1Y#
1k#
1n#
1r#
1v#
b1101 >&
b100 W&
b101 Q#
b1111 j#
b10 :&
b1011 S&
b1010 M#
19&
b1101 ;&
1R&
b100 T&
0-$
1,$
1L#
b101 N#
1e#
b1111 g#
0@
1?
04&
b0 1&
b100001 %
b100001 *$
b100001 k&
b100001 l&
0G#
b0 D#
b100001 )
b100001 =
b100001 ~#
b100001 !$
1+$
01$
1>
0D
#105000
b100 n&
0'
#110000
b11 n&
0'
#115000
b10 n&
0'
#120000
b1 n&
0'
#125000
b0 n&
0'
#150000
b110 y$
b110 z$
b1100 3%
b1100 4%
b100 F"
b100 G"
b1101100 ($
b1101100 v$
b1101100 4
b1101100 &$
b1010100 ;
b1010100 +"
b1010100 /
b1010100 9
#285000
1K&
1s#
b110 <&
1I&
b1010100 C#
b1010100 H#
b100 h#
1q#
b1101100 0&
b1101100 5&
b1100 U&
0f&
1H&
0F&
1p#
0n#
0e&
1c&
b110 =&
b1001 >&
b10 i#
b1101 j#
b11 V&
b1100 W&
b110 :&
b1001 ;&
b10 f#
b1101 g#
b11 S&
b1100 T&
10%
b110 6&
b110 7&
1X"
b100 a#
b100 b#
b1100 N&
b1100 O&
b110 !%
1.%
b1010100 E
b1010100 -"
b1010100 @#
b1010100 F#
b100 M"
1V"
b1101100 2$
b1101100 x$
b1101100 -&
b1101100 3&
b1100 :%
0K%
1>%
1B%
1)%
1-%
1U"
1<"
1D"
1H%
1D%
b11 ;%
1/%
1$%
b110 "%
1["
1W"
1P"
b10 N"
1>"
17"
b1010 5"
b1100 <%
b1001 #%
b1101 O"
b101 6"
b11 8%
b110 }$
b10 K"
b1010 2"
b1100 9%
17%
b1001 ~$
1|$
b1 %
b1 *$
b1 k&
b1 l&
b1101 L"
1J"
b101 3"
11"
b1 )
b1 =
b1 ~#
b1 !$
00$
11$
0C
1D
16
11
#290000
0,
0>%
0B%
0)%
0-%
0U"
0<"
0D"
0H%
0D%
b0 ;%
0/%
0$%
b0 "%
0["
0W"
0P"
b0 N"
0>"
07"
b0 5"
0(
0/$
07$
0?$
b0 <%
b0 #%
0>$
b0 O"
b0 6"
0Q
0$
0!
b0 8%
b0 }$
b0 K"
b0 2"
b0 &
b0 =$
b0 *
b0 P
b0 9%
07%
b0 ~$
0|$
b0 L"
0J"
b0 3"
01"
1<$
1O
10$
1)$
1C
1<
15
10
b11100100 N%
b11100100 3
b11100100 $$
b11100100 L%
b11100100 a"
b11100100 .
b11100100 7
b11100100 _"
06
01
#290050
0D&
0H&
0Y&
0]&
0W#
0_#
0p#
b0 =&
0?&
0J&
b0 V&
0_&
0c&
b0 P#
0R#
0Y#
b0 i#
0k#
0r#
0v#
b0 >&
b0 W&
b0 Q#
b0 j#
b0 :&
b0 S&
b0 %
b0 *$
b0 k&
b0 l&
b0 M#
b0 f#
b0 )
b0 =
b0 ~#
b0 !$
09&
b0 ;&
0R&
b0 T&
0,$
0L#
b0 N#
0e#
b0 g#
0?
14&
b1 1&
1G#
b1 D#
0+$
0>
#295000
bz &
bz =$
bz *
bz P
05
00
#388000
b0 &
b0 =$
b0 *
b0 P
15
10
#393000
bz &
bz =$
bz *
bz P
05
00
#451000
